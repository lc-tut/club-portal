// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package router

import (
	"github.com/lc-tut/club-portal/router/data"
	"go.uber.org/zap"
	"gorm.io/gorm"
)

// Injectors from router_wire.go:

func newServer(logger *zap.Logger, db *gorm.DB) (*Server, error) {
	store, err := newRedisStore()
	if err != nil {
		return nil, err
	}
	engine := newGinEngine(logger, store)
	sessionCookieOption := data.NewSessionCookieOption()
	csrfCookieOption := data.NewCSRFCookieOption()
	config := data.NewOAuth2Config()
	whitelistInfo := data.NewWhitelist()
	dataConfig := &data.Config{
		SessionCookieOptions: sessionCookieOption,
		CSRFCookieOptions:    csrfCookieOption,
		GoogleOAuthConfig:    config,
		WhitelistUsers:       whitelistInfo,
	}
	server := registerRouters(engine, dataConfig, logger, db)
	return server, nil
}
